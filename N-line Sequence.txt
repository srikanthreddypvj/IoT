1) MyMapper.javacc

import java.io.IOException; 
import org.apache.hadoop.io.*; 
import org.apache.hadoop.mapreduce.*; 
public class MyMapper extends Mapper<LongWritable, Text, Text, IntWritable> { 
 private final static IntWritable one = new IntWritable(1); 
 private Text word = new Text(); 
 public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException { 
 String line = value.toString(); 
 String[] words = line.split("\\s+"); 
 for (String w : words) { 
 word.set(w); 
 context.write(word, one); 
 } } } 

2) MyReducer.java
import java.io.IOException; 
import org.apache.hadoop.io.*; 
import org.apache.hadoop.mapreduce.*; 
public class MyReducer extends Reducer<Text, IntWritable, Text, IntWritable> { 
 public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException { 
 int sum = 0; 
 for (IntWritable val : values) { 
 sum += val.get(); 
 } 
 context.write(key, new IntWritable(sum)); 
 }
 } 

3) MyJob.java
import org.apache.hadoop.conf.*; 
import org.apache.hadoop.fs.*; 
import org.apache.hadoop.io.IntWritable; 
import org.apache.hadoop.io.Text; 
import org.apache.hadoop.mapreduce.Job; 
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; 
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat; 
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; 
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat; 
public class MyJob { 
 public static void main(String[] args) throws Exception { 
 Configuration conf = new Configuration(); 
 Job job = Job.getInstance(conf, "Word Count"); 
 job.setJarByClass(MyJob.class); 
 job.setMapperClass(MyMapper.class); 
 job.setCombinerClass(MyReducer.class); 
 job.setReducerClass(MyReducer.class); 
 job.setOutputKeyClass(Text.class); 
 job.setOutputValueClass(IntWritable.class); 
 job.setInputFormatClass(TextInputFormat.class); 
 job.setOutputFormatClass(TextOutputFormat.class); 
 FileInputFormat.addInputPath(job, new Path(args[0])); 
 FileOutputFormat.setOutputPath(job, new Path(args[1])); 
 System.exit(job.waitForCompletion(true) ? 0 : 1); 
 } 
 } 
